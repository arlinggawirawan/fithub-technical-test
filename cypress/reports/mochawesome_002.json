{
  "stats": {
    "suites": 1,
    "tests": 6,
    "passes": 6,
    "pending": 0,
    "failures": 0,
    "start": "2024-03-27T17:21:14.917Z",
    "end": "2024-03-27T17:21:19.431Z",
    "duration": 4514,
    "testsRegistered": 6,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "0c717cee-675d-4ad9-a747-d6d2e3645364",
      "title": "",
      "fullFile": "cypress/e2e/fithub-technical-test/userCRUDTest.cy.js",
      "file": "cypress/e2e/fithub-technical-test/userCRUDTest.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "204923c1-f00c-435c-8676-355f6930ed06",
          "title": "View and modify list user",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should retrieve all list of users",
              "fullTitle": "View and modify list user should retrieve all list of users",
              "timedOut": null,
              "duration": 119,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const fetchUsers = page => {\n  return cy.request('GET', `https://reqres.in/api/users?page=${page}`);\n};\ncy.request('GET', 'https://reqres.in/api/users?page=1').then(response => {\n  expect(response.status).to.eq(200);\n  expect(response.body).to.have.property('total_pages').and.to.be.a('number');\n  const totalPages = response.body.total_pages;\n  for (let page = 1; page <= totalPages; page++) {\n    fetchUsers(page).then(response => {\n      expect(response.status).to.eq(200);\n      expect(response.body).to.have.property('data').and.to.be.an('array');\n    });\n  }\n});",
              "err": {},
              "uuid": "56f795be-c13f-4777-b46a-5ab70a9a3717",
              "parentUUID": "204923c1-f00c-435c-8676-355f6930ed06",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should create a new user request",
              "fullTitle": "View and modify list user should create a new user request",
              "timedOut": null,
              "duration": 445,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const newUser = {\n  name: 'Arlingga',\n  job: 'Sr. QA Engineer'\n};\ncy.request('POST', 'https://reqres.in/api/users', newUser).then(response => {\n  expect(response.status).to.eq(201);\n  expect(response.body).to.have.property('name', newUser.name);\n  expect(response.body).to.have.property('job', newUser.job);\n  expect(response.body).to.have.property('id');\n  expect(response.body.createdAt).to.match(/^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}.\\d{3}Z$/);\n  expect(response.headers).to.have.property('content-type', 'application/json; charset=utf-8');\n});",
              "err": {},
              "uuid": "00a3fb87-e430-47b2-8ce1-57142c72a1e4",
              "parentUUID": "204923c1-f00c-435c-8676-355f6930ed06",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should update user information",
              "fullTitle": "View and modify list user should update user information",
              "timedOut": null,
              "duration": 412,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.requestAPI('PUT', 'https://reqres.in/api/users/2', {\n  name: 'Arlingga',\n  job: 'Sr. Front End Developer'\n}).then(response => {\n  expect(response.status).to.eq(200);\n  expect(response.body).to.have.property('name', 'Arlingga');\n  expect(response.body).to.have.property('job', 'Sr. Front End Developer');\n  expect(response.body.updatedAt).to.match(/^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}.\\d{3}Z$/);\n});",
              "err": {},
              "uuid": "033a2611-722d-44c5-8224-d4caabf2c5b9",
              "parentUUID": "204923c1-f00c-435c-8676-355f6930ed06",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should delete user information",
              "fullTitle": "View and modify list user should delete user information",
              "timedOut": null,
              "duration": 398,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request('DELETE', 'https://reqres.in/api/users/1').then(response => {\n  expect(response.status).to.eq(204);\n});",
              "err": {},
              "uuid": "31f8c6cb-4e7c-42af-a3c8-0dfc241138c4",
              "parentUUID": "204923c1-f00c-435c-8676-355f6930ed06",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should view detail user information",
              "fullTitle": "View and modify list user should view detail user information",
              "timedOut": null,
              "duration": 46,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request('GET', 'https://reqres.in/api/users/1').then(response => {\n  expect(response.status).to.eq(200);\n  expect(response.body).to.have.property('data');\n  const data = response.body.data;\n  expect(data).to.have.property('id').and.to.be.a('number');\n  expect(data).to.have.property('email').and.to.be.a('string');\n  expect(data).to.have.property('first_name').and.to.be.a('string');\n  expect(data).to.have.property('last_name').and.to.be.a('string');\n  expect(data).to.have.property('avatar').and.to.be.a('string');\n  // Assert if user avatar = null, skip file format assertion\n  const avatarUrl = response.body.data.avatar;\n  if (avatarUrl !== null) {\n    const fileFormatRegex = /\\.(jpg|jpeg|png|gif)$/;\n    expect(avatarUrl).to.match(fileFormatRegex);\n  } else {\n    cy.log('Avatar URL is null. skip avatar format assertion.');\n  }\n});",
              "err": {},
              "uuid": "4c147a6b-779e-40c6-ba26-ff3dee50e7e9",
              "parentUUID": "204923c1-f00c-435c-8676-355f6930ed06",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "wait for video record duration purpose",
              "fullTitle": "View and modify list user wait for video record duration purpose",
              "timedOut": null,
              "duration": 3011,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.wait(3000);",
              "err": {},
              "uuid": "5159d1ab-28e4-4243-be9c-1ba7835d081c",
              "parentUUID": "204923c1-f00c-435c-8676-355f6930ed06",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "56f795be-c13f-4777-b46a-5ab70a9a3717",
            "00a3fb87-e430-47b2-8ce1-57142c72a1e4",
            "033a2611-722d-44c5-8224-d4caabf2c5b9",
            "31f8c6cb-4e7c-42af-a3c8-0dfc241138c4",
            "4c147a6b-779e-40c6-ba26-ff3dee50e7e9",
            "5159d1ab-28e4-4243-be9c-1ba7835d081c"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 4431,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "cypress/reports",
        "overwrite": false,
        "html": true,
        "json": true
      },
      "version": "6.2.0"
    }
  }
}