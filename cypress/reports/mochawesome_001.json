{
  "stats": {
    "suites": 1,
    "tests": 5,
    "passes": 5,
    "pending": 0,
    "failures": 0,
    "start": "2024-03-28T02:07:09.067Z",
    "end": "2024-03-28T02:07:13.729Z",
    "duration": 4662,
    "testsRegistered": 5,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "1bc092ac-e348-4313-9332-fb89b02db3f6",
      "title": "",
      "fullFile": "cypress/e2e/fithub-technical-test/registerUserTest.cy.js",
      "file": "cypress/e2e/fithub-technical-test/registerUserTest.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "0d59224b-0453-4086-a736-cdaf52dfb14e",
          "title": "Register user and patch update after successful register",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should check single user found",
              "fullTitle": "Register user and patch update after successful register should check single user found",
              "timedOut": null,
              "duration": 390,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  failOnStatusCode: false,\n  method: 'GET',\n  url: 'https://reqres.in/api/users/20'\n}).then(response => {\n  expect(response.status).to.eq(404);\n});",
              "err": {},
              "uuid": "54d9d239-eb4a-4389-a7b8-bf1754a3da95",
              "parentUUID": "0d59224b-0453-4086-a736-cdaf52dfb14e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should check register without password is unable",
              "fullTitle": "Register user and patch update after successful register should check register without password is unable",
              "timedOut": null,
              "duration": 403,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.requestAPIWithError('POST', 'https://reqres.in/api/register', {\n  username: 'arlingga@outlook.co.id'\n}, {\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.status).to.eq(400);\n});",
              "err": {},
              "uuid": "806e6d22-f250-48f3-9bfb-469947881942",
              "parentUUID": "0d59224b-0453-4086-a736-cdaf52dfb14e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should create register user successfully",
              "fullTitle": "Register user and patch update after successful register should create register user successfully",
              "timedOut": null,
              "duration": 405,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.requestAPI('POST', 'https://reqres.in/api/register', {\n  email: \"eve.holt@reqres.in\",\n  password: \"pistol\"\n}).then(response => {\n  expect(response.status).to.eq(200);\n  expect(response.body).to.have.property('id').and.to.be.a('number');\n  expect(response.body).to.have.property('token');\n});",
              "err": {},
              "uuid": "1eec67f0-4985-43d1-b19f-aa9c55f6cb10",
              "parentUUID": "0d59224b-0453-4086-a736-cdaf52dfb14e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should update register user successfully",
              "fullTitle": "Register user and patch update after successful register should update register user successfully",
              "timedOut": null,
              "duration": 384,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.requestAPI('PATCH', 'https://reqres.in/api/users/2', {\n  name: \"arlingga\"\n}).then(response => {\n  expect(response.status).to.eq(200);\n  expect(response.body).to.have.property('name').and.to.be.a('string');\n  expect(response.body.updatedAt).to.match(/^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}.\\d{3}Z$/);\n});",
              "err": {},
              "uuid": "696c6838-b6ef-41c3-917f-aabc08930618",
              "parentUUID": "0d59224b-0453-4086-a736-cdaf52dfb14e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "wait for video record duration purpose",
              "fullTitle": "Register user and patch update after successful register wait for video record duration purpose",
              "timedOut": null,
              "duration": 3010,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.wait(3000);",
              "err": {},
              "uuid": "15cbb0b6-9228-46ab-9961-2071bc3d5525",
              "parentUUID": "0d59224b-0453-4086-a736-cdaf52dfb14e",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "54d9d239-eb4a-4389-a7b8-bf1754a3da95",
            "806e6d22-f250-48f3-9bfb-469947881942",
            "1eec67f0-4985-43d1-b19f-aa9c55f6cb10",
            "696c6838-b6ef-41c3-917f-aabc08930618",
            "15cbb0b6-9228-46ab-9961-2071bc3d5525"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 4592,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "cypress/reports",
        "overwrite": false,
        "html": true,
        "json": true
      },
      "version": "6.2.0"
    }
  }
}